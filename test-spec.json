{
    "swagger": "2.0",
    "info": {
        "title": "URBN Microservices for Client Applications",
        "description": "Microservices API for building awesome front-end experiences",
        "version": "0.0.1"
    },
    "host": "10.9.1.45",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v0/{site-id}",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/basket": {
            "get": {
                "summary": "Retrieve Basket",
                "description": "Basket detail endpoint that returns line items and pricing information\n",
                "parameters": [
                    {
                        "name": "X-Urbn-Auth-Token",
                        "in": "header",
                        "description": "Encrypted URBN Auth Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Urbn-Site",
                        "in": "header",
                        "description": "URBN Site Id",
                        "enum": [
                            "fp-us",
                            "fp-uk",
                            "fp-cn"
                        ],
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Basket"
                ],
                "responses": {
                    "200": {
                        "description": "An array of line items and pricing",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Re-Price Basket",
                "description": "Force re-pricing of the basket (i.e. cache buster)\n",
                "parameters": [
                    {
                        "name": "X-Urbn-Auth-Token",
                        "in": "header",
                        "description": "Encrypted URBN Auth Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Basket"
                ],
                "responses": {
                    "200": {
                        "description": "An array of line items and pricing",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/basket/item": {
            "post": {
                "summary": "Add SKU to Basket",
                "description": "Basket detail endpoint that returns line items and pricing information\n",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Basket"
                ],
                "responses": {
                    "200": {
                        "description": "An array of line items and pricing",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/basket/item/{id}": {
            "put": {
                "summary": "Update line item",
                "description": "Basket detail endpoint that returns line items and pricing information\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Line item id",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Basket"
                ],
                "responses": {
                    "200": {
                        "description": "An array of line items and pricing",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "User Profile",
                "description": "The User Profile endpoint returns information about the Uber user that has authorized with the application.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Profile information for a user",
                        "schema": {
                            "$ref": "Profile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "summary": "User Activity",
                "description": "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "History information for the given user",
                        "schema": {
                            "$ref": "Activities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Product": {
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "Profile": {
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name of the Uber user."
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the Uber user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the Uber user"
                },
                "picture": {
                    "type": "string",
                    "description": "Image URL of the Uber user."
                },
                "promo_code": {
                    "type": "string",
                    "description": "Promo code of the Uber user."
                }
            }
        },
        "Activity": {
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the activity"
                }
            }
        },
        "Activities": {
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "$ref": "Activity"
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}